<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DESKTOP-9048JB1" failures="0" tests="13" name="com.Urbanladder.test.UrbanladderTest" time="0.020" errors="2" timestamp="2020-07-31T13:41:32 IST" skipped="11">
  <testcase classname="com.Urbanladder.test.UrbanladderTest" name="titleVerify" time="0.000">
    <skipped/>
  </testcase> <!-- titleVerify -->
  <system-out/>
  <testcase classname="com.Urbanladder.test.UrbanladderTest" name="tearDown" time="0.000">
    <error type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at com.Urbanladder.base.CommonMethods.tearDown(CommonMethods.java:49)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:63)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:348)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:217)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:130)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:68)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:830)
]]>
    </error>
  </testcase> <!-- tearDown -->
  <system-out/>
  <testcase classname="com.Urbanladder.test.UrbanladderTest" name="createDriver" time="0.020">
    <error message="C:\Users\Sayan\Desktop\project\src\main\resources\ObjectRepository\config.properties (The system cannot find the path specified)" type="java.io.FileNotFoundException">
      <![CDATA[java.io.FileNotFoundException: C:\Users\Sayan\Desktop\project\src\main\resources\ObjectRepository\config.properties (The system cannot find the path specified)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:213)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:155)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:110)
at com.Urbanladder.base.BrowserFactory.getWebdriver(BrowserFactory.java:23)
at com.Urbanladder.base.CommonMethods.createDriver(CommonMethods.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:63)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:348)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:68)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:830)
]]>
    </error>
  </testcase> <!-- createDriver -->
  <system-out/>
  <testcase classname="com.Urbanladder.test.UrbanladderTest" name="clickBookshelves" time="0.000">
    <skipped/>
  </testcase> <!-- clickBookshelves -->
  <system-out/>
  <testcase classname="com.Urbanladder.test.UrbanladderTest" name="priceChoice" time="0.000">
    <skipped/>
  </testcase> <!-- priceChoice -->
  <system-out/>
  <testcase classname="com.Urbanladder.test.UrbanladderTest" name="setRange" time="0.000">
    <skipped/>
  </testcase> <!-- setRange -->
  <system-out/>
  <testcase classname="com.Urbanladder.test.UrbanladderTest" name="storageChoice" time="0.000">
    <skipped/>
  </testcase> <!-- storageChoice -->
  <system-out/>
  <testcase classname="com.Urbanladder.test.UrbanladderTest" name="checkStorageType" time="0.000">
    <skipped/>
  </testcase> <!-- checkStorageType -->
  <system-out/>
  <testcase classname="com.Urbanladder.test.UrbanladderTest" name="includeStock" time="0.000">
    <skipped/>
  </testcase> <!-- includeStock -->
  <system-out/>
  <testcase classname="com.Urbanladder.test.UrbanladderTest" name="filterChoice" time="0.000">
    <skipped/>
  </testcase> <!-- filterChoice -->
  <system-out/>
  <testcase classname="com.Urbanladder.test.UrbanladderTest" name="sortBy" time="0.000">
    <skipped/>
  </testcase> <!-- sortBy -->
  <system-out/>
  <testcase classname="com.Urbanladder.test.UrbanladderTest" name="PopUp" time="0.000">
    <skipped/>
  </testcase> <!-- PopUp -->
  <system-out/>
  <testcase classname="com.Urbanladder.test.UrbanladderTest" name="writeExcel" time="0.000">
    <skipped/>
  </testcase> <!-- writeExcel -->
  <system-out/>
</testsuite> <!-- com.Urbanladder.test.UrbanladderTest -->
